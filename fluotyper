add_library('minim')
from letter import Letter
import cfg

letters = []

def setup():
    global typeSound, errSound, appSound
    size(600, 600)
    background(220)
    textSize(32)
    
    minim = Minim(this)
    typeSound = minim.loadSample("type.mp3")
    errSound = minim.loadSample("ComputerErrorAlert.mp3")
    appSound = minim.loadSample("07043056.wav")
    
def draw():

    background(random(256), random(256), random(256))
    cfg.lightCnt += 1
    if (cfg.lightCnt > 30):
        cfg.light = False
        cfg.lightCnt = 0
    else:
        background(220)    
    
    for i in range(len(letters)):
        letters[i].display()
        letters[i].update()
    
    fill(0)
    text(cfg.score, width - 100, 32)
    
    # add letters
    while(len(letters) < cfg.maxSize):
        addRandomLetter()
        
    # level check
    if (frameCount % 60 == 0):
        for i in range(len(letters)):
            if (letters[i].onScreen()):
                break
            if (i == len(letters) - 1):
                cfg.maxSize += 1
                print(cfg.maxSize)
                appSound.trigger()
    
def addRandomLetter():
    letters.append(Letter(unichr(97 + random(26)), random(width-32), random(-600, -200), color(random(256), random(256), random(256))))
    
    
def keyTyped():
    typeCorrect = False
    for i in range(len(letters)-1, -1,-1):
        if (letters[i].ch == key):
            del letters[i]
            cfg.score += 1
            typeSound.trigger()
            typeCorrect = True

    if (not typeCorrect):
        errSound.trigger()
